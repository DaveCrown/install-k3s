---
- name: Install K3s
  hosts: "{{ install_host | default('nodes')}}"
  become: true
  gather_facts: true

  vars:

    kube_config_vars:
      file: "~/.kube/config"
      # set a context name - uses default of default
      # context: default
      # set a user - uses default of default
      # user: default
  pre_tasks:
    - name: Import Plugin Map
      ansible.builtin.include_vars:
        file: "{{ playbook_dir }}/plugin_map.yaml"
        name: plugin_map

    - ansible.builtin.debug:
        var: plugin_map
        verbosity: 2

    - name: Get the username running the play
      become: false
      local_action: command whoami
      register: local_user
      changed_when: false

    - name: Create a fact for the usrename from the local env
      ansible.builtin.set_fact:
        local_user_name: "{{ local_user.stdout }}"

    - name: Fetch cluster config files
      ansible.builtin.include_role:
        name: get_cluster_config
      when: (config_repo is defined) or (config_dir is defined)

  tasks:
    - name: Prep hosts
      ansible.builtin.include_role:
        name: prep_hosts
      when: install_prereqs | default(true)

    - name: Install u9143 drivers
      ansible.builtin.include_role:
        name: install_u6143
      when: configure_u6143 | default(false)

    - name: Install K3s Master
      ansible.builtin.include_role:
        name: install_master
      when: inventory_hostname in groups['master']

    - name: Get config files
      ansible.builtin.include_role:
        name: get_k3s_config_files
      when: inventory_hostname in groups['master']
      run_once: true

    - name: Build Kube Config
      ansible.builtin.include_role:
        name: build_kube_config
      when:
        - inventory_hostname in groups['master']
        - build_config | default(false)
      run_once: true

    - name: Install work nodes
      ansible.builtin.include_role:
        name: install_worker
      when: inventory_hostname in groups['workers']

    - name: Clean Up Secrets
      ansible.builtin.file:
        path: "{{ work_dir }}"
        state: absent
        force: true
      run_once: true
      delegate_to: 127.0.0.1
      become: false
      changed_when: false

